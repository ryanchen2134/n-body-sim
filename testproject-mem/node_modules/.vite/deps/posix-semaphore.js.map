{
  "version": 3,
  "sources": ["../../bindings/bindings.js", "../../posix-semaphore/srcs/addon.js"],
  "sourcesContent": ["\n/**\n * Module dependencies.\n */\n\nvar fs = require('fs')\n  , path = require('path')\n  , join = path.join\n  , dirname = path.dirname\n  , exists = fs.existsSync || path.existsSync\n  , defaults = {\n        arrow: process.env.NODE_BINDINGS_ARROW || ' â†’ '\n      , compiled: process.env.NODE_BINDINGS_COMPILED_DIR || 'compiled'\n      , platform: process.platform\n      , arch: process.arch\n      , version: process.versions.node\n      , bindings: 'bindings.node'\n      , try: [\n          // node-gyp's linked version in the \"build\" dir\n          [ 'module_root', 'build', 'bindings' ]\n          // node-waf and gyp_addon (a.k.a node-gyp)\n        , [ 'module_root', 'build', 'Debug', 'bindings' ]\n        , [ 'module_root', 'build', 'Release', 'bindings' ]\n          // Debug files, for development (legacy behavior, remove for node v0.9)\n        , [ 'module_root', 'out', 'Debug', 'bindings' ]\n        , [ 'module_root', 'Debug', 'bindings' ]\n          // Release files, but manually compiled (legacy behavior, remove for node v0.9)\n        , [ 'module_root', 'out', 'Release', 'bindings' ]\n        , [ 'module_root', 'Release', 'bindings' ]\n          // Legacy from node-waf, node <= 0.4.x\n        , [ 'module_root', 'build', 'default', 'bindings' ]\n          // Production \"Release\" buildtype binary (meh...)\n        , [ 'module_root', 'compiled', 'version', 'platform', 'arch', 'bindings' ]\n        ]\n    }\n\n/**\n * The main `bindings()` function loads the compiled bindings for a given module.\n * It uses V8's Error API to determine the parent filename that this function is\n * being invoked from, which is then used to find the root directory.\n */\n\nfunction bindings (opts) {\n\n  // Argument surgery\n  if (typeof opts == 'string') {\n    opts = { bindings: opts }\n  } else if (!opts) {\n    opts = {}\n  }\n  opts.__proto__ = defaults\n\n  // Get the module root\n  if (!opts.module_root) {\n    opts.module_root = exports.getRoot(exports.getFileName())\n  }\n\n  // Ensure the given bindings name ends with .node\n  if (path.extname(opts.bindings) != '.node') {\n    opts.bindings += '.node'\n  }\n\n  var tries = []\n    , i = 0\n    , l = opts.try.length\n    , n\n    , b\n    , err\n\n  for (; i<l; i++) {\n    n = join.apply(null, opts.try[i].map(function (p) {\n      return opts[p] || p\n    }))\n    tries.push(n)\n    try {\n      b = opts.path ? require.resolve(n) : require(n)\n      if (!opts.path) {\n        b.path = n\n      }\n      return b\n    } catch (e) {\n      if (!/not find/i.test(e.message)) {\n        throw e\n      }\n    }\n  }\n\n  err = new Error('Could not locate the bindings file. Tried:\\n'\n    + tries.map(function (a) { return opts.arrow + a }).join('\\n'))\n  err.tries = tries\n  throw err\n}\nmodule.exports = exports = bindings\n\n\n/**\n * Gets the filename of the JavaScript file that invokes this function.\n * Used to help find the root directory of a module.\n * Optionally accepts an filename argument to skip when searching for the invoking filename\n */\n\nexports.getFileName = function getFileName (calling_file) {\n  var origPST = Error.prepareStackTrace\n    , origSTL = Error.stackTraceLimit\n    , dummy = {}\n    , fileName\n\n  Error.stackTraceLimit = 10\n\n  Error.prepareStackTrace = function (e, st) {\n    for (var i=0, l=st.length; i<l; i++) {\n      fileName = st[i].getFileName()\n      if (fileName !== __filename) {\n        if (calling_file) {\n            if (fileName !== calling_file) {\n              return\n            }\n        } else {\n          return\n        }\n      }\n    }\n  }\n\n  // run the 'prepareStackTrace' function above\n  Error.captureStackTrace(dummy)\n  dummy.stack\n\n  // cleanup\n  Error.prepareStackTrace = origPST\n  Error.stackTraceLimit = origSTL\n\n  return fileName\n}\n\n/**\n * Gets the root directory of a module, given an arbitrary filename\n * somewhere in the module tree. The \"root directory\" is the directory\n * containing the `package.json` file.\n *\n *   In:  /home/nate/node-native-module/lib/index.js\n *   Out: /home/nate/node-native-module\n */\n\nexports.getRoot = function getRoot (file) {\n  var dir = dirname(file)\n    , prev\n  while (true) {\n    if (dir === '.') {\n      // Avoids an infinite loop in rare cases, like the REPL\n      dir = process.cwd()\n    }\n    if (exists(join(dir, 'package.json')) || exists(join(dir, 'node_modules'))) {\n      // Found the 'package.json' file or 'node_modules' dir; we're done\n      return dir\n    }\n    if (prev === dir) {\n      // Got to the top\n      throw new Error('Could not find module root given file: \"' + file\n                    + '\". Do you have a `package.json` file? ')\n    }\n    // Try the parent dir next\n    prev = dir\n    dir = join(dir, '..')\n  }\n}\n", "\n\nconst SemaphoreCPP = require('bindings')('addon').Semaphore\nconst semaphoreNames = {}\n\nfunction parseOptions (options) {\n  if (typeof options !== 'object') {\n    options = {}\n  }\n  if (!(options.strict === false)) {\n    options.strict = true\n  }\n  if (!options.debug) {\n    options.debug = false\n  } else {\n    options.debug = true\n  }\n  if (!options.silent) {\n    options.silent = false\n  } else {\n    options.silent = true\n  }\n  if (!(options.retryOnEintr === true)) {\n    options.retryOnEintr = false\n  }\n  return options\n}\n\nfunction registerExitHandler (options, onExit) {\n  process.on('SIGINT', () => {\n    setTimeout(() => { process.exit(0) }, 4000)\n    onExit()\n    process.exit(0)\n  })\n  process.on('exit', onExit)\n  process.on('uncaughtException', (err) => {\n    console.error(err.stack)\n    if (!options.silent || options.debug) {\n      console.log('[posix-semaphore] Catched uncaughtException, closing semaphore if necessary...')\n    }\n    setTimeout(() => { process.exit(1) }, 4000)\n    onExit()\n    process.exit(1)\n  })\n}\n\nfunction Semaphore(name, options) {\n  if (!(this instanceof Semaphore)) {\n    return new Semaphore(name, options)\n  }\n\n  if (typeof name !== 'string') {\n    throw new Error('Semaphore() expects a string as first argument')\n  }\n\n  if (semaphoreNames[name] === 1) {\n    throw new Error(`Semaphore \"${name}\" already open in this process`)\n  }\n\n  this.acquire = () => {\n    this.sem.acquire()\n  }\n\n  this.release = () => {\n    this.sem.release()\n  }\n\n  this.close = () => {\n    this.sem.close()\n    delete semaphoreNames[name]\n    this.closed = true\n  }\n\n  semaphoreNames[name] = 1\n  this.name = name\n  options = parseOptions(options)\n  this.sem = new SemaphoreCPP(name, options.strict, options.debug, options.silent, options.retryOnEintr, options.value)\n  if (options.closeOnExit === undefined || options.closeOnExit) {\n    const onExit = () => {\n      if (this.closed !== true) {\n        if (!options.silent || options.debug) {\n          console.log(`[posix-semaphore] Exiting, closing semaphore \"${this.name}\"... (to prevent this behavior, set the \\'closeOnExit\\' option to false)`)\n        }\n        this.close()\n        if (!options.silent || options.debug) {\n          console.log('[posix-semaphore] done.')\n        }\n      }\n    }\n    registerExitHandler(options, onExit)\n  }\n}\n\nmodule.exports = Semaphore\n"],
  "mappings": ";;;;;;;;;;AAAA;AAAA;AAKA,QAAI,KAAK;AAAT,QACI,OAAO;AADX,QAEI,OAAO,KAAK;AAFhB,QAGI,UAAU,KAAK;AAHnB,QAII,SAAS,GAAG,cAAc,KAAK;AAJnC,QAKI,WAAW;AAAA,MACP,OAAO,QAAQ,IAAI,uBAAuB;AAAA,MAC1C,UAAU,QAAQ,IAAI,8BAA8B;AAAA,MACpD,UAAU,QAAQ;AAAA,MAClB,MAAM,QAAQ;AAAA,MACd,SAAS,QAAQ,SAAS;AAAA,MAC1B,UAAU;AAAA,MACV,KAAK;AAAA;AAAA,QAEH,CAAE,eAAe,SAAS,UAAW;AAAA,QAErC,CAAE,eAAe,SAAS,SAAS,UAAW;AAAA,QAC9C,CAAE,eAAe,SAAS,WAAW,UAAW;AAAA,QAEhD,CAAE,eAAe,OAAO,SAAS,UAAW;AAAA,QAC5C,CAAE,eAAe,SAAS,UAAW;AAAA,QAErC,CAAE,eAAe,OAAO,WAAW,UAAW;AAAA,QAC9C,CAAE,eAAe,WAAW,UAAW;AAAA,QAEvC,CAAE,eAAe,SAAS,WAAW,UAAW;AAAA,QAEhD,CAAE,eAAe,YAAY,WAAW,YAAY,QAAQ,UAAW;AAAA,MACzE;AAAA,IACJ;AAQJ,aAAS,SAAU,MAAM;AAGvB,UAAI,OAAO,QAAQ,UAAU;AAC3B,eAAO,EAAE,UAAU,KAAK;AAAA,MAC1B,WAAW,CAAC,MAAM;AAChB,eAAO,CAAC;AAAA,MACV;AACA,WAAK,YAAY;AAGjB,UAAI,CAAC,KAAK,aAAa;AACrB,aAAK,cAAc,QAAQ,QAAQ,QAAQ,YAAY,CAAC;AAAA,MAC1D;AAGA,UAAI,KAAK,QAAQ,KAAK,QAAQ,KAAK,SAAS;AAC1C,aAAK,YAAY;AAAA,MACnB;AAEA,UAAI,QAAQ,CAAC,GACT,IAAI,GACJ,IAAI,KAAK,IAAI,QACb,GACA,GACA;AAEJ,aAAO,IAAE,GAAG,KAAK;AACf,YAAI,KAAK,MAAM,MAAM,KAAK,IAAI,CAAC,EAAE,IAAI,SAAU,GAAG;AAChD,iBAAO,KAAK,CAAC,KAAK;AAAA,QACpB,CAAC,CAAC;AACF,cAAM,KAAK,CAAC;AACZ,YAAI;AACF,cAAI,KAAK,OAAO,UAAQ,QAAQ,CAAC,IAAI,UAAQ,CAAC;AAC9C,cAAI,CAAC,KAAK,MAAM;AACd,cAAE,OAAO;AAAA,UACX;AACA,iBAAO;AAAA,QACT,SAAS,GAAG;AACV,cAAI,CAAC,YAAY,KAAK,EAAE,OAAO,GAAG;AAChC,kBAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAEA,YAAM,IAAI,MAAM,iDACZ,MAAM,IAAI,SAAU,GAAG;AAAE,eAAO,KAAK,QAAQ;AAAA,MAAE,CAAC,EAAE,KAAK,IAAI,CAAC;AAChE,UAAI,QAAQ;AACZ,YAAM;AAAA,IACR;AACA,WAAO,UAAU,UAAU;AAS3B,YAAQ,cAAc,SAAS,YAAa,cAAc;AACxD,UAAI,UAAU,MAAM,mBAChB,UAAU,MAAM,iBAChB,QAAQ,CAAC,GACT;AAEJ,YAAM,kBAAkB;AAExB,YAAM,oBAAoB,SAAU,GAAG,IAAI;AACzC,iBAAS,IAAE,GAAG,IAAE,GAAG,QAAQ,IAAE,GAAG,KAAK;AACnC,qBAAW,GAAG,CAAC,EAAE,YAAY;AAC7B,cAAI,aAAa,YAAY;AAC3B,gBAAI,cAAc;AACd,kBAAI,aAAa,cAAc;AAC7B;AAAA,cACF;AAAA,YACJ,OAAO;AACL;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAGA,YAAM,kBAAkB,KAAK;AAC7B,YAAM;AAGN,YAAM,oBAAoB;AAC1B,YAAM,kBAAkB;AAExB,aAAO;AAAA,IACT;AAWA,YAAQ,UAAU,SAAS,QAAS,MAAM;AACxC,UAAI,MAAM,QAAQ,IAAI,GAClB;AACJ,aAAO,MAAM;AACX,YAAI,QAAQ,KAAK;AAEf,gBAAM,QAAQ,IAAI;AAAA,QACpB;AACA,YAAI,OAAO,KAAK,KAAK,cAAc,CAAC,KAAK,OAAO,KAAK,KAAK,cAAc,CAAC,GAAG;AAE1E,iBAAO;AAAA,QACT;AACA,YAAI,SAAS,KAAK;AAEhB,gBAAM,IAAI,MAAM,6CAA6C,OAC7C,wCAAwC;AAAA,QAC1D;AAEA,eAAO;AACP,cAAM,KAAK,KAAK,IAAI;AAAA,MACtB;AAAA,IACF;AAAA;AAAA;;;ACrKA;AAAA;AAEA,QAAM,eAAe,mBAAoB,OAAO,EAAE;AAClD,QAAM,iBAAiB,CAAC;AAExB,aAAS,aAAc,SAAS;AAC9B,UAAI,OAAO,YAAY,UAAU;AAC/B,kBAAU,CAAC;AAAA,MACb;AACA,UAAI,EAAE,QAAQ,WAAW,QAAQ;AAC/B,gBAAQ,SAAS;AAAA,MACnB;AACA,UAAI,CAAC,QAAQ,OAAO;AAClB,gBAAQ,QAAQ;AAAA,MAClB,OAAO;AACL,gBAAQ,QAAQ;AAAA,MAClB;AACA,UAAI,CAAC,QAAQ,QAAQ;AACnB,gBAAQ,SAAS;AAAA,MACnB,OAAO;AACL,gBAAQ,SAAS;AAAA,MACnB;AACA,UAAI,EAAE,QAAQ,iBAAiB,OAAO;AACpC,gBAAQ,eAAe;AAAA,MACzB;AACA,aAAO;AAAA,IACT;AAEA,aAAS,oBAAqB,SAAS,QAAQ;AAC7C,cAAQ,GAAG,UAAU,MAAM;AACzB,mBAAW,MAAM;AAAE,kBAAQ,KAAK,CAAC;AAAA,QAAE,GAAG,GAAI;AAC1C,eAAO;AACP,gBAAQ,KAAK,CAAC;AAAA,MAChB,CAAC;AACD,cAAQ,GAAG,QAAQ,MAAM;AACzB,cAAQ,GAAG,qBAAqB,CAAC,QAAQ;AACvC,gBAAQ,MAAM,IAAI,KAAK;AACvB,YAAI,CAAC,QAAQ,UAAU,QAAQ,OAAO;AACpC,kBAAQ,IAAI,gFAAgF;AAAA,QAC9F;AACA,mBAAW,MAAM;AAAE,kBAAQ,KAAK,CAAC;AAAA,QAAE,GAAG,GAAI;AAC1C,eAAO;AACP,gBAAQ,KAAK,CAAC;AAAA,MAChB,CAAC;AAAA,IACH;AAEA,aAAS,UAAU,MAAM,SAAS;AAChC,UAAI,EAAE,gBAAgB,YAAY;AAChC,eAAO,IAAI,UAAU,MAAM,OAAO;AAAA,MACpC;AAEA,UAAI,OAAO,SAAS,UAAU;AAC5B,cAAM,IAAI,MAAM,gDAAgD;AAAA,MAClE;AAEA,UAAI,eAAe,IAAI,MAAM,GAAG;AAC9B,cAAM,IAAI,MAAM,cAAc,IAAI,gCAAgC;AAAA,MACpE;AAEA,WAAK,UAAU,MAAM;AACnB,aAAK,IAAI,QAAQ;AAAA,MACnB;AAEA,WAAK,UAAU,MAAM;AACnB,aAAK,IAAI,QAAQ;AAAA,MACnB;AAEA,WAAK,QAAQ,MAAM;AACjB,aAAK,IAAI,MAAM;AACf,eAAO,eAAe,IAAI;AAC1B,aAAK,SAAS;AAAA,MAChB;AAEA,qBAAe,IAAI,IAAI;AACvB,WAAK,OAAO;AACZ,gBAAU,aAAa,OAAO;AAC9B,WAAK,MAAM,IAAI,aAAa,MAAM,QAAQ,QAAQ,QAAQ,OAAO,QAAQ,QAAQ,QAAQ,cAAc,QAAQ,KAAK;AACpH,UAAI,QAAQ,gBAAgB,UAAa,QAAQ,aAAa;AAC5D,cAAM,SAAS,MAAM;AACnB,cAAI,KAAK,WAAW,MAAM;AACxB,gBAAI,CAAC,QAAQ,UAAU,QAAQ,OAAO;AACpC,sBAAQ,IAAI,iDAAiD,KAAK,IAAI,wEAA0E;AAAA,YAClJ;AACA,iBAAK,MAAM;AACX,gBAAI,CAAC,QAAQ,UAAU,QAAQ,OAAO;AACpC,sBAAQ,IAAI,yBAAyB;AAAA,YACvC;AAAA,UACF;AAAA,QACF;AACA,4BAAoB,SAAS,MAAM;AAAA,MACrC;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
